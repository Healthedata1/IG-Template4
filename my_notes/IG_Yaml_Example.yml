resourceType: ImplementationGuide # Fixed value Don't change
# ******************************************************************************
# this first half is all about the metadata about the IG - you need to fill This
# stuff out for each IG.
# ******************************************************************************
# your id entered here and below in 'url'
# if you don't know what it should be ask somebody for help
id: healthedatainc.ig-template4
# Need to have an extension for each spreadsheet as below, the valueUri points to the
# relative file path based on the nominated directories in the 'resource-path'
# parameter listed below
extension:
- url: http://hl7.org/fhir/StructureDefinition/igpublisher-spreadsheet
  valueUri: patient-on-usprofile-spreadsheet.xml
- url: http://hl7.org/fhir/StructureDefinition/igpublisher-spreadsheet
  valueUri: template-profile-spreadsheet.xml
# your ig url =  canonical + / + ImplementationGuide + / + id from above
# if you don't know what the canonical should be ask somebody for help
url: http://www.fhir.org/guides/test4/ImplementationGuide/healthedatainc.ig-template4
# your business version here using SEMVER format - if you don't know it ask somebody for help
version: 0.0.0
# your IG computer friendly name - UsePascalCase
name: IGTest4
# your IG human friendly title - this is what shows up at the top of the page
title: IG Test4
# status = 'draft' when drafting pre-ballot, when published and implemented = 'active'
status: draft
# instance date if hand editing go to https://en.wikipedia.org/wiki/ISO_8601 and
# copy and paste a 'Date and Time in UTC' into here.
date: '2020-01-24T04:09:08+00:00'
# Who is publishing this guide - if you don't know it ask somebody for help
publisher: Health eData Inc
# List of contact - below is an example for email and and an url
contact:
- telecom:
  - system: email
    value: mailto:ehaas@healthedatainc.com
- telecom:
  - system: url
    value: http://foobar.com
# Copyright for the IG - if you don't know it ask somebody for help
copyright: Used by permission of Health eData Inc, all rights reserved Creative Commons
  License
# NPM package id - see https://confluence.hl7.org/display/FHIR/NPM+Package+Specification
# for more information - if you don't know it ask somebody for help
packageId: healthedatainc.ig-template4
# For HL7 IGs the license is 'CC0-1.0' only change this if you understand the
# licensing
license: CC0-1.0
# List of allowed fhirVersions value are here: http://build.fhir.org/valueset-FHIR-version.html
# for CI build use the current version listed at the bottom of each page of
# the FHIR specification
fhirVersion:
- 4.0.1
# List of IGs this IG dependsOn, In this example, US Core version 3.1.0 and QI Core CI build.
# the uri is the canonical url for the IG's ImplementationGuide resource.
# The IG's packageId is typically listed at the footer of each page of the IG
# the id is used within this IG to reference the dependencies and is an undocumented
# requirement for publishing
dependsOn:
- id: uscore
  uri: http://hl7.org/fhir/us/core/ImplementationGuide/hl7.fhir.us.core
  packageId: hl7.fhir.us.core
  version: 3.1.0
- id: qicore
  uri: http://hl7.org/fhir/us/qicore/ImplementationGuide/hl7.fhir.us.qicore
  packageId: hl7.fhir.us.qicore
  version: current
# there is a global element that can list profiles that apply globally - not sure
# its been implemented anywhere
# ******************************************************************************
# OK the definition element is where you list all the nitty gritty details like
# the FHIR artifacts used in the IG, the pages and all those ig publisher specific
# requirements.  You can enter this manually or use some handy tools to populate it
#( more on that later)
# ******************************************************************************
definition:
  # List of grouping is used by some, I don't use and just default to the values below
  grouping:
  - name: base
  - id: template-profile-spreadsheet.xml
    name: Template-basic
  # List of resources including their:
  # id, whether they are an example - using the boolean option here
  # can also add a name and description element among other if you want
  # this is the minimal amount of information you need.
  # todo create a tool to inspect a directory of resources and autopopulate
  resource:
  - extension:
    reference:
      reference: Basic/diet
    exampleBoolean: true
  - extension:
    reference:
      reference: Patient/example
    exampleBoolean: true
  - extension:
    reference:
      reference: Patient/example2
    exampleBoolean: true
  - extension:
    reference:
      reference: StructureDefinition/extension-complex
    name: Complex Extension
    description: an example of a complex extension.
    exampleBoolean: false
  - extension:
    reference:
      reference: StructureDefinition/extension-blah
    name: Simple Extension
    description: an example of a simple extension.
    exampleBoolean: false
  - extension:
    reference:
      reference: OperationDefinition/opdef-test
    description: Limited implementation of the Populate Questionnaire implementation
    exampleBoolean: false
  - extension:
    reference:
      reference: StructureDefinition/ifr
    exampleBoolean: false
  - extension:
    reference:
      reference: ValueSet/bar-codes
    name: Bar Value Set
    description: A bunch of example codes
    exampleBoolean: false
  - extension:
    reference:
      reference: CapabilityStatement/server
    description: 'This resource defines the expected capabilities '
    exampleBoolean: false
  - extension:
    reference:
      reference: CodeSystem/blah-codes
    description: A bunch of example codes
    exampleBoolean: false
  - extension:
    reference:
      reference: CapabilityStatement/client
    description: 'This resource defines the expected capabilities '
    exampleBoolean: false
  - extension:
    reference:
      reference: StructureDefinition/template-profile-on-profile
    name: Template Profile on Profile
    description: Template-Profile-on-Profile
    exampleBoolean: false
  - extension:
    reference:
      reference: ValueSet/foo-codes
    name: Foo Value Set
    description: A bunch of example codes
    exampleBoolean: false
  - extension:
    reference:
      reference: StructureDefinition/template-basic
    name: Health eData Template Profile
    description: This is a simple example Template
    exampleBoolean: false
  - extension:
    reference:
      reference: ValueSet/blah-codes
    description: A bunch of example codes
    exampleBoolean: false
  - extension:
    reference:
      reference: StructureDefinition/extension-blah2
    name: blah2
    description: an example of a simple extension.
  # pages are set up below to give a logical view of the contents of the guide and
  # a page heirarchy. It always starts with the index.html or Home pages
  # This is different than the navbar menu.  This section
  # drives the generation of the IG's table of contents and the breadcrumbs
  # which is pretty technical.
  # The information is the page Title and relative url for the finished page so
  # that corresponds to the same title in the pages Front Matter for the non generated
  # pages and the resource name or Capital case of the id  for the generated artifacts.
  # ( aka conformance resources ).
  # The url is Type + id + '.html' for the generated files and the filename
  # appended wiht '.html'  for the non generated pages.
  # generation choices are 'markdown' for markdown file, 'html' for html files
  # and 'generated' for generated files.
  # Unfortunately mush this needs to be manually entered. But
  # for the generated pages if you stick to the following
  # outline, they can be added by a script.  ( todo ) and the following list
  # pruned or edited to fit your needs.
  page:
    nameUrl: index.html
    title: Home
    generation: markdown
    page:
    - nameUrl: guidance.html
      title: General Guidance
      generation: markdown
    - nameUrl: more-guidance.html
      title: More General Guidance
      generation: html
    - nameUrl: profiles.html
      title: Profiles and Extensions
      generation: markdown
      page:
      - nameUrl: StructureDefinition-ifr.html
        title: StructureDefinition Ifr
        generation: generated
      - nameUrl: StructureDefinition-template-profile-on-profile.html
        title: StructureDefinition Template Profile On Profile
        generation: generated
      - nameUrl: StructureDefinition-template-basic.html
        title: StructureDefinition Template Basic
        generation: generated
      - nameUrl: StructureDefinition-extension-complex.html
        title: StructureDefinition Extension Complex
        generation: generated
      - nameUrl: StructureDefinition-extension-blah.html
        title: StructureDefinition Extension Blah
        generation: generated
    - nameUrl: operations.html
      title: Operations
      generation: markdown
      page:
      - nameUrl: OperationDefinition-opdef-test.html
        title: OperationDefinition Opdef Test
        generation: generated
    - nameUrl: terminology.html
      title: Terminology
      generation: markdown
      page:
      - nameUrl: ValueSet-bar-codes.html
        title: ValueSet Bar Codes
        generation: generated
      - nameUrl: ValueSet-foo-codes.html
        title: ValueSet Foo Codes
        generation: generated
      - nameUrl: ValueSet-blah-codes.html
        title: ValueSet Blah Codes
        generation: generated
      - nameUrl: CodeSystem-blah-codes.html
        title: CodeSystem Blah Codes
        generation: generated
    - nameUrl: searchparameters.html
      title: Search Parameters
      generation: markdown
    - nameUrl: capstatements.html
      title: Capability Statements
      generation: markdown
      page:
      - nameUrl: CapabilityStatement-server.html
        title: CapabilityStatement Server
        generation: generated
      - nameUrl: CapabilityStatement-client.html
        title: CapabilityStatement Client
        generation: generated
    - nameUrl: security.html
      title: Security
      generation: markdown
    - nameUrl: downloads.html
      title: Downloads
      generation: markdown
    - nameUrl: all-examples.html
      title: All Examples
      generation: markdown
    - nameUrl: toc.html
      title: Table of Contents
      generation: html
  # parameters are ig tooling specific name value pairs  to affect what and how
  # the tool behaves.
  # for information on these parameters see with there choices and defaults
  # https://confluence.hl7.org/display/FHIR/Implementation+Guide+Parameters
  # I have added some custom parameters for my ImplementationGuides templates
  # as well and explain where indicated.
  parameter:
  - code: path-resource
    value: source/examples
  - code: path-resource
    value: source/resources
  - code: path-pages
    value: source/pages
  - code: path-pages
    value: template/content/pages
  - code: path-qa
    value: generated_output/qa
  - code: path-temp
    value: generated_output/temp
  - code: path-tx-cache
    value: generated_output/txCache
  - code: path-output
    value: docs
  - code: path-history
    value: http://www.fhir.org/guides/test4/history.html
  - code: foo
    value: bar
